<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>top-level-items</key>
	<array>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>82</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>81</string>
					<key>Timestamp</key>
					<string>720259191.39185</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>sampleTimer1 Watch App/ContentView.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>                Button(action: {
</string>
				<key>leading</key>
				<string>                }
                
</string>
				<key>trailing</key>
				<string>                    timerScreenShow = false
                    //                    timeVal = 0//ここを付け足してみた。
                    //                    ０になるのでタイマーは止まるがDONEが表示されてしまう
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>48</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>47</string>
					<key>Timestamp</key>
					<string>720259191.391842</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>sampleTimer1 Watch App/ContentView.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    let initialTime: Int
</string>
				<key>leading</key>
				<string>    @Binding var timerScreenShow: Bool
    @State var timeVal: Int
</string>
				<key>trailing</key>
				<string>    let timer = Timer.publish(every: 1, on: .main, in: .common).autoconnect()
//Timer.Publishを使ってみた。これでバックグラウンドでも動くようになったはず。
    
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>90</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>89</string>
					<key>Timestamp</key>
					<string>720259191.391824</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>sampleTimer1 Watch App/ContentView.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>                .padding(.top)
</string>
				<key>leading</key>
				<string>                        .foregroundColor(.red)
                })
</string>
				<key>trailing</key>
				<string>            }
        } else {
            Button(action: {
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
	</array>
</dict>
</plist>
